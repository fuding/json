AC_INIT(json, [0.1], [])
AM_INIT_AUTOMAKE(json, [0.1], [])
AC_CONFIG_SRCDIR([src/json/json.h])

AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LIBTOOL

top_builddir=$ac_pwd

case "$srcdir" in
    /*)
        top_srcdir=$srcdir
        ;;
    *)
        oldsrcdir="$srcdir"
        top_srcdir="`cd \"$srcdir\"; pwd`"
        ;;
esac

CXXFLAGS="-I$top_srcdir/src -I$top_builddir/src $CXXFLAGS"

AC_ARG_ENABLE(debug,
  AC_HELP_STRING([--enable-debug],
    [enable debuging information @<:@default=no@:>@]))

#AC_CHECK_LIB(dl, dlopen, [], AC_MSG_ERROR([dl library missing]))

AM_CONDITIONAL(DEBUG, test x$enable_debug = xyes)
if test x$enable_debug = xyes; then
  CXXFLAGS="$CFLAGS -g -O0"
  LDFLAGS="$LDFLAGS -g -O0"
  AC_DEFINE(EBUG, 1, [debug options turned on])
fi

if test -d .git; then
  AC_DEFINE_UNQUOTED(GIT_BRANCH, "`cat .git/HEAD | cut -f 3- -d/`", [git branch])
  AC_DEFINE_UNQUOTED(GIT_COMMIT, "`git log -1 | head -1 | cut -f 2 -d' '`", [git revision])
fi
BUILD=`date +%c`
AC_MSG_NOTICE([build time is $BUILD])
AC_DEFINE_UNQUOTED(BUILDTIME, "$BUILD", [time of build])

AC_SUBST(LDFLAGS)
AC_SUBST(CXXFLAGS)
AC_CONFIG_HEADERS([src/json/config.h])

AC_CONFIG_FILES([Makefile src/Makefile test/Makefile])
AC_OUTPUT([json.pc])
